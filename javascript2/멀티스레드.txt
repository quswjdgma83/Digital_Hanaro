1. 보조기억장치 —> 실행 —> 주기억장치 —> 스레드 생성
    
    프로그램———————> 프로세스 ———→ 실제 일을 한다.
    
    —> 각각의 프로세스는 서로 독립이라 데이터를 주고받을 수 없음
    

> 하나의 프로그램은 적어도 하나의 스레드를 갖고 이를 주스레드라고 한다. 여러개의 스레드가 있을경우 각 스레드들은 동시에 cpu를 차지하는게 아니라 cpu의 시간을 쪼개서 일정시간 자신의 일을 수행한다. A스레드가 cpu에서 쫓겨나고 B스레드가 cpu를 차지하는걸 컨텍스트 스위치라고 하고 이때 시간이 많이 걸린다. 어떤 스레드가 먼저 cpu를 차지할지는 os의 스케쥴러에 의해 결정된다. 이것을 제어하기 위한 수단들이 있다.
> 

```python
int a; //A스레드는 a변수에 값을 10을 넣어놓고 이 때 쫓겨남
// B스레드는 a값을 출력하고 100으로 바꿈, 이 때 쫓겨남
// 다시 들어온 A는 a 변수값 100을 읽고 처리
// 동일한 자원을 같이 쓸 때 자원 출동 문제
```

> 누가 쓰고 있는 동안 남이 못들어가게 하는 수단들을 동기화라고 부르는데 동기화 문제를 해결하기 위한 수단으로 크리티컬 섹션, 뮤텍스, 세마포어, 이벤트 등이 있다. 전체적인 응답시간은 더 길어지는데 중간 중간 사용자에게 응답을 주기 때문에 일을 빨리하는 “기분”이 든다.
> 

소켓 

> 자료구조, 클래스, 메신저 만들려면 소켓을 사용, OS가 제공하는 자료구조. 소켓이 아니었다면 개발자가 하드웨어를 속속들이 알고 있어야 했을 것. 프린터에 글자 하나 내보내려면 프린트 구조부터 공부하고 화면에 동그라미 그리려면 그래픽 카드가 뭔지부터 알고 있어야 했다.
> 

OS

> OS의 목적은 사용자 프로그램을 프로세스로 만드는 것(커널)
>